######################################################
################# Setup Kafka ########################
######################################################
---

- name: "Create Directories"
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u+rw,g+rw
  with_items:
    - "{{ zookeeper_dir }}"
    - "{{ kafka_dir }}"

- name: Install Kafka Templates
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ kafka_dir }}/{{ item }}"
    group: root
    owner: root
    mode: 0644
  with_items:
    - kafka-deploy.yml
    - server.properties
    
- name: Copy files
  copy:
    src: "files/{{ item }}"
    dest: "{{ zookeeper_dir }}/{{ item }}"
    group: root
    owner: root
    mode: 0644
  with_items:
    - configuration.xsl
    - log4j.properties

- name: Install Zookeeper Templates
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ zookeeper_dir }}/{{ item }}"
    group: root
    owner: root
    mode: 0644
  with_items:
    - zoo.cfg
    - zookeeper-deploy.yml

- name: Flush Kafka
  shell: |
    kubectl delete -f {{ kafka_dir }}/kafka-deploy.yml --ignore-not-found=true
    while [ $(kubectl get -f {{ kafka_dir }}/deploy.yml | tail -n +2 | wc -l) != '0' ]; do
      echo -n .;
      sleep 1;
    done;
    sleep 5;

- name: Flush Zookeeper
  shell: |
    kubectl delete -f {{ zookeeper_dir }}/zookeeper-deploy.yml --ignore-not-found=true
    while [ $(kubectl get -f {{ zookeeper_dir }}/zookeeper-deploy.yml | tail -n +2 | wc -l) != '0' ]; do
      echo -n .;
      sleep 1;
    done;
    sleep 5;

- name: Flush Config Maps
  command: 'kubectl delete configmap {{ item }} --ignore-not-found=true'
  with_items:
    - kafka
    - zookeeper

# This task uses kafka_config_map and feeds it into Kubernetes as a configuration map which it then uses
# to build the container
- name: Create Kafka Config
  command: 'kubectl create configmap kafka --from-file {{ kafka_dir }}/server.properties'

# This does the same, but with Zookeeper
- name: Create Zookeeper Config
  shell: |
    kubectl create configmap zookeeper --from-file={{ zookeeper_dir }}/zoo.cfg \
       --from-file={{ zookeeper_dir }}/configuration.xsl \
       --from-file={{ zookeeper_dir }}/log4j.properties

- name: Run the zookeeper deploy file
  shell: "kubectl apply -f {{ zookeeper_dir }}/zookeeper-deploy.yml"

- name: Wait for zookeeper to be ready
  include_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "statefulset"
    namespace: "default"
    resource_name: "zookeeper"
    label: ""

- name: Run the kafka deploy file
  shell: "kubectl apply -f {{ kafka_dir }}/kafka-deploy.yml"

- name: Wait for kafka to be ready
  include_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "statefulset"
    namespace: "default"
    resource_name: "kafka"
    label: ""