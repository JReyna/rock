---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    component: kafka
spec:
  ports:
  - port: 9092
  selector:
    component: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
  labels:
    component: kafka
spec:
  selector:
    component: kafka
  ports:
  - name: transport
    protocol: TCP
    port: {{ kafka_port }}
    targetPort: {{ kafka_port }}
  clusterIP: None
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    component: kafka
spec:
  serviceName: "kafka-broker"
  replicas: {{ groups['sensors'] | length }}
  selector:
    matchLabels:
     component: kafka
  template:
    metadata:
      labels:
        component: kafka
    spec:
      containers:
      - name: kafka
        image: {{ kafka_image }}:{{ kafka_ver }}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: {{ kafka_port }}
          name: transport
        volumeMounts:
          - name: kafka-data
            mountPath: "{{ kafka_data_path }}"
          - name: kafka
            mountPath: {{ kafka_home }}/config/server.properties
            subPath: server.properties
        env:
        - name: ZOOKEEPER_REPLICAS
          value: "{{ zookeeper_replicas }}"
        - name: ZOOKEEPER_PORT
          value: "{{ zookeeper_port }}"
        - name: KAFKA_PORT
          value: "{{ kafka_port }}"
      nodeSelector:
        role: sensor
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - kafka
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: kafka
        configMap:
          name: kafka
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: rbd
      resources:
        requests:
          storage: {{ kafka_pv_size }}Gi